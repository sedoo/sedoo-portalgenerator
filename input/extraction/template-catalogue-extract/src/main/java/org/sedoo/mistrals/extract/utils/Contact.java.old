package org.sedoo.mistrals.extract.utils;

import java.util.Collection;
import java.util.Collections;

import javax.naming.directory.Attributes;

import org.apache.log4j.Logger;
import org.sedoo.mistrals.extract.Props;
import org.sedoo.mistrals.ldap.MistralsLDAPAccess;

/**
 * TODO Bug résolu un peu vite: pb si mail non trouvé dans l'annuaire : NullPointerException
 * 
    com.sun.jndi.ldap.LdapNamingEnumeration : getNextBatch (line 111)
    com.sun.jndi.ldap.LdapNamingEnumeration : nextAux (line 245)
    com.sun.jndi.ldap.LdapNamingEnumeration : nextImpl (line 236)
    com.sun.jndi.ldap.LdapNamingEnumeration : next (line 184)
    org.sedoo.mistrals.ldap.MistralsLDAPAccess : getUserAttributes (line 72)
    org.sedoo.mistrals.extract.utils.Contact : <init> (line 31)
 * 
 * @author brissebr
 *
 */
public class Contact {

	private static Logger logger = Logger.getLogger(Contact.class);
	
	private String nom;
	private String mail;
	private String organisme;
	private String type;
	
	private Attributes ldapAttributes;
	
	private Collection<String> roles;
	
	private Contact(String nom, String mail, String organisme, String type) {
		this(nom,mail,organisme,type,true);
	}
	
	private Contact(String nom, String mail, String organisme, String type, boolean searchLdap) {
		super();
		this.nom = nom;
		this.mail = mail;
		this.organisme = organisme;
		this.type = type;
		
		if (searchLdap){
			MistralsLDAPAccess ldap = new MistralsLDAPAccess();
			this.ldapAttributes = ldap.getUserAttributes(mail);
			logger.debug("Ldap Attrs: " + ldapAttributes);
		}else{
			this.roles = Collections.singleton(Props.ROLE_PUBLIC);
		}
	}
	
	public String toString() {
		String res = type + ": " + nom;
		if (organisme != null){
			res += " (" + organisme + ")";
		}
		res += ", email: " + mail;
		return res; 
	}
		
	public String getMail() {
		return mail;
	}
	public String getNom() {
		return nom;
	}
	public String getOrganisme() {
		return organisme;
	}
	public String getType() {
		return type;
	}
	public String getAbstract() {
		return MistralsLDAPAccess.getValue(ldapAttributes, MistralsLDAPAccess.LDAP_ATTR_DESCRIPTION);
	}
	
	public Collection<String> getRoles() {
		if (roles == null){
			roles = MistralsLDAPAccess.getValues(ldapAttributes, MistralsLDAPAccess.LDAP_ATTR_ROLE);			
			roles.add(Props.ROLE_PUBLIC);
		}
		return roles;
	}
}
